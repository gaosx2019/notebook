"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[1533],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>b});var a=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},l=Object.keys(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var p=a.createContext({}),c=function(n){var e=a.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},u=function(n){var e=c(n.components);return a.createElement(p.Provider,{value:e},n.children)},d={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,l=n.originalType,p=n.parentName,u=o(n,["components","mdxType","originalType","parentName"]),s=c(t),b=r,v=s["".concat(p,".").concat(b)]||s[b]||d[b]||l;return t?a.createElement(v,i(i({ref:e},u),{},{components:t})):a.createElement(v,i({ref:e},u))}));function b(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var l=t.length,i=new Array(l);i[0]=s;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=n,o.mdxType="string"==typeof n?n:r,i[1]=o;for(var c=2;c<l;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},9102:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const l={sidebar_position:4},i="\u903b\u8f91\u8fd0\u7b97\u7b26",o={unversionedId:"embedded-development/basic/linux-c/operators-in-c-language/logical-operator",id:"embedded-development/basic/linux-c/operators-in-c-language/logical-operator",title:"\u903b\u8f91\u8fd0\u7b97\u7b26",description:"\u903b\u8f91\u4e0e &&",source:"@site/docs/embedded-development/basic/linux-c/operators-in-c-language/logical-operator.md",sourceDirName:"embedded-development/basic/linux-c/operators-in-c-language",slug:"/embedded-development/basic/linux-c/operators-in-c-language/logical-operator",permalink:"/notebook/docs/embedded-development/basic/linux-c/operators-in-c-language/logical-operator",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"\u5173\u7cfb\u8fd0\u7b97\u7b26",permalink:"/notebook/docs/embedded-development/basic/linux-c/operators-in-c-language/relational-operators"},next:{title:"\u4f4d\u8fd0\u7b97\u7b26",permalink:"/notebook/docs/embedded-development/basic/linux-c/operators-in-c-language/bitwise-operators"}},p={},c=[{value:"\u903b\u8f91\u4e0e &amp;&amp;",id:"\u903b\u8f91\u4e0e-",level:2},{value:"\u903b\u8f91\u6216 ||",id:"\u903b\u8f91\u6216-",level:2},{value:"\u903b\u8f91\u975e !",id:"\u903b\u8f91\u975e-",level:2},{value:"\u793a\u4f8b\u4ee3\u78011:",id:"\u793a\u4f8b\u4ee3\u78011",level:2},{value:"\u8fd0\u884c\u7ed3\u679c\uff1a",id:"\u8fd0\u884c\u7ed3\u679c",level:3},{value:"\u793a\u4f8b\u4ee3\u78012:",id:"\u793a\u4f8b\u4ee3\u78012",level:2},{value:"\u8fd0\u884c\u7ed3\u679c:",id:"\u8fd0\u884c\u7ed3\u679c-1",level:3},{value:"\u7ec3\u4e60",id:"\u7ec3\u4e60",level:2},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u8fd0\u884c\u7ed3\u679c",id:"\u8fd0\u884c\u7ed3\u679c-2",level:3}],u={toc:c};function d(n){let{components:e,...t}=n;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u903b\u8f91\u8fd0\u7b97\u7b26"},"\u903b\u8f91\u8fd0\u7b97\u7b26"),(0,r.kt)("h2",{id:"\u903b\u8f91\u4e0e-"},"\u903b\u8f91\u4e0e &&"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u8868\u8fbe\u5f0f1 && \u8868\u8fbe\u5f0f2")),(0,r.kt)("p",null,"\u89c4\u5219\uff1a",(0,r.kt)("strong",{parentName:"p"},"\u90fd\u771f\u5219\u771f\uff0c\u4e00\u5047\u5219\u5047")),(0,r.kt)("p",null,"\u77ed\u8def\u7279\u6027\uff1a\u8868\u8fbe\u5f0f1\u4e3a\u5047\uff0c\u5219\u4e0d\u4f1a\u6267\u884c\u8868\u8fbe\u5f0f2"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"int a = 10,b = 20;\nint ret = a > b && a;\n")),(0,r.kt)("h2",{id:"\u903b\u8f91\u6216-"},"\u903b\u8f91\u6216 ||"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u8868\u8fbe\u5f0f1 || \u8868\u8fbe\u5f0f2")),(0,r.kt)("p",null,"\u89c4\u5219\uff1a",(0,r.kt)("strong",{parentName:"p"},"\u90fd\u5047\u5219\u5047\uff0c\u4e00\u771f\u5219\u771f")),(0,r.kt)("p",null,"\u77ed\u8def\u7279\u6027\uff1a\u8868\u8fbe\u5f0f1\u4e3a\u771f\uff0c\u5219\u4e0d\u4f1a\u6267\u884c\u8868\u8fbe\u5f0f2"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"int a = 10,b = 20;\nint ret = a > b || a;\n")),(0,r.kt)("h2",{id:"\u903b\u8f91\u975e-"},"\u903b\u8f91\u975e !"),(0,r.kt)("p",null,"\u89c4\u5219\uff1a",(0,r.kt)("strong",{parentName:"p"},"(\u5047->\u771f\uff0c\u771f->\u5047)")),(0,r.kt)("h2",{id:"\u793a\u4f8b\u4ee3\u78011"},"\u793a\u4f8b\u4ee3\u78011:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nint main()\n{\n        int a = 0,b = 0;\n        int ret = 0;\n\n        printf("please input two data : ");\n        scanf("%d%d",&a,&b);\n\n        //&&\u7684\u89c4\u5219\uff1a\u90fd\u771f\u5219\u771f,\u4e00\u5047\u5219\u5047\n//        ret = a > b && a != 30;\n//        printf("ret = %d\\n",ret);\n\n\n        // ||\u7684\u89c4\u5219: \u4e00\u771f\u5219\u771f,\u90fd\u5047\u5219\u5047\n        ret = a > b || a != 30;\n        printf("ret = %d\\n",ret);\n\n\n        return 0;\n}\n')),(0,r.kt)("h3",{id:"\u8fd0\u884c\u7ed3\u679c"},"\u8fd0\u884c\u7ed3\u679c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"please input two data : 20 10\nret = 1\n")),(0,r.kt)("h2",{id:"\u793a\u4f8b\u4ee3\u78012"},"\u793a\u4f8b\u4ee3\u78012:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nint main()\n{\n        int a = 7,b = 9,c = 1;\n        int ret = 0;\n\n\n        //&&\u7b26\u53f7\u7684\u77ed\u8def\u7279\u6027\uff1a \u8868\u8fbe\u5f0f1\u4e3a\u5047\uff0c\u90a3\u4e48\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u5c31\u5df2\u7ecf\u4e3a\u5047\u4e86,\u8868\u8fbe\u5f0f2\u4e0d\u4f1a\u6267\u884c\n        ret = a > b && c ++;\n        printf("ret = %d c = %d\\n\\n",ret,c); //0,1\n\n        printf("+++++++++++++++++++++++++\\n");\n\n        ret = a < b && c ++;\n        printf("ret = %d c = %d\\n\\n",ret,c); //1,2\n\n        printf("========================================\\n");\n\n        c = 1;\n\n        //||\u7b26\u53f7\u7684\u77ed\u8def\u7279\u6027\uff1a \u8868\u8fbe\u5f0f1\u4e3a\u771f\uff0c\u90a3\u4e48\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u5c31\u5df2\u7ecf\u4e3a\u771f\u4e86,\u8868\u8fbe\u5f0f2\u4e0d\u4f1a\u6267\u884c\n        ret = a > b || c ++;\n        printf("ret = %d c = %d\\n\\n",ret,c); //1,2\n\n        printf("+++++++++++++++++++++++++\\n");\n\n        ret = a < b || c ++;\n        printf("ret = %d c = %d\\n\\n",ret,c); //1,2\n        return 0;\n}\n')),(0,r.kt)("h3",{id:"\u8fd0\u884c\u7ed3\u679c-1"},"\u8fd0\u884c\u7ed3\u679c:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ret = 0 c = 1\n\n+++++++++++++++++++++++++\nret = 1 c = 2\n\n========================================\nret = 1 c = 2\n\n+++++++++++++++++++++++++\nret = 1 c = 2\n")),(0,r.kt)("h2",{id:"\u7ec3\u4e60"},"\u7ec3\u4e60"),(0,r.kt)("p",null,"\u8981\u6c42\u5927\u5bb6\u7528\u7b14\u7b97\u51fa\u4e0b\u5217printf\u8f93\u51fa\u7684\u7ed3\u679c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'int value = 0;\nint a = 0;\nint b = 1;\n\nvalue = a && b;\nprintf("%d\\n",value); // 0 \n\nvalue = a || b;\nprintf("%d\\n",value); // 1\n\nvalue = a++ && b++; \n// a && b = 0\n// a = a + 1 = 1\nprintf("%d\\n",value); // 0\n\nvalue = --a || b--; \n// a = a - 1 = 0\n// a || b = 1\n// b = b - 1 = 0\nprintf("%d\\n",value); // 1\n\nvalue = (a + b) || (a - b);\n// (0 + 0) || (0 - 0) = 0 || 0 = 0\nprintf("%d\\n",value);  // 0\n\nvalue = (a * b) && (a + b);\n// (0 * 0) && (0 + 0) = 0 && 0 = 0 \nprintf("%d\\n",value); // 0\n\nvalue = !a;\nprintf("%d\\n",value); // 1\n\nprintf("%d,%d,%d\\n",a,b,value); // 0,0,1\n')),(0,r.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n  \nint main()\n{\n    int value = 0;\n    int a = 0;\n    int b = 1;\n\n    value = a && b;\n    printf("%d\\n",value); // 0 \n\n    value = a || b;\n    printf("%d\\n",value); // 1\n\n    value = a++ && b++;\n    // a && b = 0\n    // a = a + 1 = 1\n    printf("%d\\n",value); // 0\n\n    value = --a || b--;\n    // a = a - 1 = 0\n    // a || b = 1\n    // b = b - 1 = 0\n    printf("%d\\n",value); // 1\n\n    value = (a + b) || (a - b);\n    // (0 + 0) || (0 - 0) = 0 || 0 = 0\n    printf("%d\\n",value);  // 0\n\n    value = (a * b) && (a + b);\n    // (0 * 0) && (0 + 0) = 0 && 0 = 0 \n    printf("%d\\n",value); // 0\n\n    value = !a;\n    printf("%d\\n",value); // 1\n\n    printf("%d,%d,%d\\n",a,b,value); // 0 0 1\n    return 0;\n}\n')),(0,r.kt)("h3",{id:"\u8fd0\u884c\u7ed3\u679c-2"},"\u8fd0\u884c\u7ed3\u679c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"0\n1\n0\n1\n0\n0\n1\n0,0,1\n")))}d.isMDXComponent=!0}}]);